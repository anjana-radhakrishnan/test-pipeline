name: Build Docker Image 

on:
  push:
    branches:
      - main # adjust this to your main branch name
env:
  IP_ADDRESS: ${{ secrets.IP_ADDRESS }}
  AWS_PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build Docker image
        run: docker build -t anjanar17/my-image-name:latest .

      - name: Push Docker image
        run: docker push anjanar17/my-image-name:latest

      - name: Set permissions for private key
        run: |
          echo "${{ env.AWS_PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem
      - name: Pull Docker image
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@"${{ env.IP_ADDRESS }}" 'sudo docker pull anjanar17/my-image-name:latest'
      - name: Stop running container
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@"${{ env.IP_ADDRESS }}" 'sudo docker stop runner || true'
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@"${{ env.IP_ADDRESS }}" 'sudo docker images -a | grep "anjana" | awk '{print $3}' | xargs docker rmi -f'
      - name: Run new container
        run: |
          echo "${{ vars.ORGANIZATION }}"
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@"${{ env.IP_ADDRESS }}" 'sudo docker run -d --env ORGANIZATION="${{ vars.ORGANIZATION }}" --env ACCESS_TOKEN="${{ secrets.ACCESS_TOKEN }}" --name runner anjanar17/my-image-name:latest'
