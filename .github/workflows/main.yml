name: Build Docker Image 

on:
  push:
    branches:
      - main # adjust this to your main branch name
env:
  IP_ADDRESS: ${{ secrets.IP_ADDRESS }}
  AWS_PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      # - name: Build Docker image
      #   run: docker build -t anjanar17/my-image-name:latest .

      # - name: Push Docker image
      #   run: docker push anjanar17/my-image-name:latest

      - name: Set permissions for private key
        run: |
          echo "${{ env.AWS_PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem
          echo "${{ env.IP_ADDRESS }}"
          echo "${{ vars.ORGANIZATION }}"
          echo "${{ secrets.ACCESS_TOKEN }}"
          echo "${{ secrets.IP_ADDRESS }}"
          
      - name: Stop running container
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@"${{ env.IP_ADDRESS }}" 'sudo docker stop runner || true'
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@"${{ env.IP_ADDRESS }}" 'sudo docker rm runner || true'

  call-workflow-in-self-hosted-runner:
    needs: build
    uses: ./.github/workflows/test2.yaml   

  # removing-docker-runner:
  #   runs-on: ubuntu-latest
  #   needs: call-workflow-in-self-hosted-runner
  #   steps:
  #     - name: Set permissions for private key
  #       run: |
  #         echo "${{ env.AWS_PRIVATE_KEY }}" > key.pem
  #         chmod 600 key.pem
          
  #     - name: Stop running container
  #       run: |
  #         ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@"${{ env.IP_ADDRESS }}" 'sudo docker stop runner || true'
  #         ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@"${{ env.IP_ADDRESS }}" 'sudo docker rm runner || true'
